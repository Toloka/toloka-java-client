plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "java-library"
    id "checkstyle"
    id "groovy"
}

group = 'ai.toloka'
version = version + (Boolean.valueOf(System.getProperty("isRelease", "false")) ? "" : "-SNAPSHOT")

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getProperty("OSSRH_USERNAME")
            password = System.getProperty("OSSRH_PASSWORD")
        }
    }
}

apply from: "$rootDir/gradle/publish.gradle"

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
java {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion '8.45'
    configDirectory.set rootProject.file('config')
    ignoreFailures false
    showViolations true
}

dependencies {
    api 'javax.xml.bind:jaxb-api:2.3.1'

    api 'org.slf4j:slf4j-api:1.7.36'

    api 'org.apache.httpcomponents:httpclient:4.5.13'
    api 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'

    testImplementation 'org.codehaus.groovy:groovy-all:3.0.10'

    def junitVersion = '5.8.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation 'org.spockframework:spock-unitils:2.0-groovy-3.0'

    testImplementation 'org.objenesis:objenesis:3.2'
    testImplementation 'cglib:cglib:3.3.0'
    testImplementation 'org.ow2.asm:asm-all:5.2'

    testImplementation 'org.mock-server:mockserver-netty:3.10.8'
}
